#calling a function

def my_function():
   print("hello from a function")   

my_function()

#Arguments
#ინფორმაცია შეიძლება გადავიდეს ფუნქციებში, როგორც არგუმენტები.

#არგუმენტები მითითებულია ფუნქციის სახელის შემდეგ, ფრჩხილებში. თქვენ შეგიძლიათ დაამატოთ იმდენი არგუმენტი, რამდენიც გსურთ, უბრალოდ გამოყავით ისინი მძიმით.

#შემდეგ მაგალითს აქვს ფუნქცია ერთი არგუმენტით (fname). როდესაც ფუნქცია გამოიძახება, ჩვენ გადავცემთ სახელს, რომელიც გამოიყენება ფუნქციის შიგნით სრული სახელის დასაბეჭდად:"

def my_function(fname):
   print(fname + "  Chad")


my_function("Kata")
my_function("Kondoriza")
my_function("Goa")
my_function("Chad")



#არგუმენტების რაოდენობა
#ნაგულისხმევად, ფუნქცია უნდა იყოს გამოძახებული არგუმენტების სწორი რაოდენობით. რაც იმას ნიშნავს, რომ თუ თქვენი ფუნქცია ელის 2 არგუმენტს, თქვენ უნდა გამოძახოთ ფუნქცია 2 არგუმენტით, არც მეტი და არც ნაკლები.


def my_function(fname, lname, kname):
   print(fname + " " + lname + " " + kname ) 

my_function("Email", "Rati", "Andria")



#თვითნებური არგუმენტები, *args
#თუ არ იცით რამდენი არგუმენტი გადაეცემა თქვენს ფუნქციას, დაამატეთ * პარამეტრის სახელამდე ფუნქციის განსაზღვრაში.

#ამ გზით ფუნქცია მიიღებს რამდენიმე არგუმენტს და შესაბამისად შეუძლია წვდომა ელემენტებზე:



def my_function(*kids):
   print("The yonguest child is " + kids[2])


my_function("Rati", "Kondoriza", "Aleqsi") 




#საკვანძო სიტყვების არგუმენტები
#თქვენ ასევე შეგიძლიათ გაგზავნოთ არგუმენტები გასაღები = მნიშვნელობის სინტაქსით.

#ამ გზით არგუმენტების თანმიმდევრობას მნიშვნელობა არ აქვს.

def my_function(child3, child2, child1):
   print("The yonguest child is " + child3)


my_function(child1 = "Rati", child2 = "Andria", child3 = "Aleqsi")   

#თვითნებური საკვანძო სიტყვების არგუმენტები, **kwargs
#თუ არ იცით რამდენი საკვანძო სიტყვის არგუმენტი გადაეცემა თქვენს ფუნქციას, დაამატეთ ორი ვარსკვლავი: ** პარამეტრის სახელამდე ფუნქციის განსაზღვრაში.

#ამ გზით ფუნქცია მიიღებს არგუმენტების ლექსიკონს და შესაბამისად შეუძლია წვდომა ერთეულებზე:





def my_function(**kid):
   print("His last name is " + kid["lname"])



my_function(fname = "Lobjanidze", lname = "Rukhadze")   